#include "common.h"
#include "models_detector_cfg.h"

uniform float4x4 ogse_c_artefacts;
uniform float4x4 ogse_c_artefacts2;
uniform float4x4 ogse_c_artefacts3;
uniform float4x4 ogse_c_artefacts4;
uniform float4x4 ogse_c_artefacts5;

uniform float4x4 ogse_c_anomalies;
uniform float4x4 ogse_c_anomalies2;
uniform float4x4 ogse_c_anomalies3;
uniform float4x4 ogse_c_anomalies4;
uniform float4x4 ogse_c_anomalies5;

uniform float4 ogse_c_detector;
uniform float4 ogse_c_screen;
uniform Texture2D s_numbers;

#ifdef USE_WAVE
uniform Texture2D s_wave;
#endif

#define NUMBERS_SIZE float2(1.0000,0.0996)

float calculate_bright	(float2 pos, float2 tc, float dot_radius)
{
	float res;
	float2 art_tc;
	float4 scr_corners = ID_DETECTOR_3_SCREEN_CORNERS;
	art_tc.x = scr_corners.x + (scr_corners.y - scr_corners.x) * (pos.x + ID_DETECTOR_3_DETECT_RADIUS) / (2 * ID_DETECTOR_3_DETECT_RADIUS);
	art_tc.y = scr_corners.z + (scr_corners.w - scr_corners.z) * (ID_DETECTOR_3_DETECT_RADIUS - pos.y) / ID_DETECTOR_3_DETECT_RADIUS;
	float2 vec = tc - art_tc;
	res = step(length(vec), dot_radius) * step(0.001, length(pos));
	return res;
}

float4  main  ( p_flat I ) : SV_Target
{
	float bright = calculate_bright(float2(ogse_c_artefacts._11, ogse_c_artefacts._21), I.tcdh.xy, ID_DETECTOR_3_DOT_RADIUS);
	bright += calculate_bright(float2(ogse_c_artefacts._31, ogse_c_artefacts._41), I.tcdh.xy, ID_DETECTOR_3_DOT_RADIUS);
	bright += calculate_bright(float2(ogse_c_artefacts._12, ogse_c_artefacts._22), I.tcdh.xy, ID_DETECTOR_3_DOT_RADIUS);
	bright += calculate_bright(float2(ogse_c_artefacts._32, ogse_c_artefacts._42), I.tcdh.xy, ID_DETECTOR_3_DOT_RADIUS);
	bright += calculate_bright(float2(ogse_c_artefacts._13, ogse_c_artefacts._23), I.tcdh.xy, ID_DETECTOR_3_DOT_RADIUS);
	bright += calculate_bright(float2(ogse_c_artefacts._33, ogse_c_artefacts._43), I.tcdh.xy, ID_DETECTOR_3_DOT_RADIUS);
	bright += calculate_bright(float2(ogse_c_artefacts._14, ogse_c_artefacts._24), I.tcdh.xy, ID_DETECTOR_3_DOT_RADIUS);
	bright += calculate_bright(float2(ogse_c_artefacts._34, ogse_c_artefacts._44), I.tcdh.xy, ID_DETECTOR_3_DOT_RADIUS);
	
	bright += calculate_bright(float2(ogse_c_artefacts2._11, ogse_c_artefacts2._21), I.tcdh.xy, ID_DETECTOR_3_DOT_RADIUS);
	bright += calculate_bright(float2(ogse_c_artefacts2._31, ogse_c_artefacts2._41), I.tcdh.xy, ID_DETECTOR_3_DOT_RADIUS);
	bright += calculate_bright(float2(ogse_c_artefacts2._12, ogse_c_artefacts2._22), I.tcdh.xy, ID_DETECTOR_3_DOT_RADIUS);
	bright += calculate_bright(float2(ogse_c_artefacts2._32, ogse_c_artefacts2._42), I.tcdh.xy, ID_DETECTOR_3_DOT_RADIUS);
	bright += calculate_bright(float2(ogse_c_artefacts2._13, ogse_c_artefacts2._23), I.tcdh.xy, ID_DETECTOR_3_DOT_RADIUS);
	bright += calculate_bright(float2(ogse_c_artefacts2._33, ogse_c_artefacts2._43), I.tcdh.xy, ID_DETECTOR_3_DOT_RADIUS);
	bright += calculate_bright(float2(ogse_c_artefacts2._14, ogse_c_artefacts2._24), I.tcdh.xy, ID_DETECTOR_3_DOT_RADIUS);
	bright += calculate_bright(float2(ogse_c_artefacts2._34, ogse_c_artefacts2._44), I.tcdh.xy, ID_DETECTOR_3_DOT_RADIUS);
	
	bright += calculate_bright(float2(ogse_c_artefacts3._11, ogse_c_artefacts3._21), I.tcdh.xy, ID_DETECTOR_3_DOT_RADIUS);
	bright += calculate_bright(float2(ogse_c_artefacts3._31, ogse_c_artefacts3._41), I.tcdh.xy, ID_DETECTOR_3_DOT_RADIUS);
	bright += calculate_bright(float2(ogse_c_artefacts3._12, ogse_c_artefacts3._22), I.tcdh.xy, ID_DETECTOR_3_DOT_RADIUS);
	bright += calculate_bright(float2(ogse_c_artefacts3._32, ogse_c_artefacts3._42), I.tcdh.xy, ID_DETECTOR_3_DOT_RADIUS);
	bright += calculate_bright(float2(ogse_c_artefacts3._13, ogse_c_artefacts3._23), I.tcdh.xy, ID_DETECTOR_3_DOT_RADIUS);
	bright += calculate_bright(float2(ogse_c_artefacts3._33, ogse_c_artefacts3._43), I.tcdh.xy, ID_DETECTOR_3_DOT_RADIUS);
	bright += calculate_bright(float2(ogse_c_artefacts3._14, ogse_c_artefacts3._24), I.tcdh.xy, ID_DETECTOR_3_DOT_RADIUS);
	bright += calculate_bright(float2(ogse_c_artefacts3._34, ogse_c_artefacts3._44), I.tcdh.xy, ID_DETECTOR_3_DOT_RADIUS);
	
	bright += calculate_bright(float2(ogse_c_artefacts4._11, ogse_c_artefacts4._21), I.tcdh.xy, ID_DETECTOR_3_DOT_RADIUS);
	bright += calculate_bright(float2(ogse_c_artefacts4._31, ogse_c_artefacts4._41), I.tcdh.xy, ID_DETECTOR_3_DOT_RADIUS);
	bright += calculate_bright(float2(ogse_c_artefacts4._12, ogse_c_artefacts4._22), I.tcdh.xy, ID_DETECTOR_3_DOT_RADIUS);
	bright += calculate_bright(float2(ogse_c_artefacts4._32, ogse_c_artefacts4._42), I.tcdh.xy, ID_DETECTOR_3_DOT_RADIUS);
	bright += calculate_bright(float2(ogse_c_artefacts4._13, ogse_c_artefacts4._23), I.tcdh.xy, ID_DETECTOR_3_DOT_RADIUS);
	bright += calculate_bright(float2(ogse_c_artefacts4._33, ogse_c_artefacts4._43), I.tcdh.xy, ID_DETECTOR_3_DOT_RADIUS);
	bright += calculate_bright(float2(ogse_c_artefacts4._14, ogse_c_artefacts4._24), I.tcdh.xy, ID_DETECTOR_3_DOT_RADIUS);
	bright += calculate_bright(float2(ogse_c_artefacts4._34, ogse_c_artefacts4._44), I.tcdh.xy, ID_DETECTOR_3_DOT_RADIUS);
	
	bright += calculate_bright(float2(ogse_c_artefacts5._11, ogse_c_artefacts5._21), I.tcdh.xy, ID_DETECTOR_3_DOT_RADIUS);
	bright += calculate_bright(float2(ogse_c_artefacts5._31, ogse_c_artefacts5._41), I.tcdh.xy, ID_DETECTOR_3_DOT_RADIUS);
	bright += calculate_bright(float2(ogse_c_artefacts5._12, ogse_c_artefacts5._22), I.tcdh.xy, ID_DETECTOR_3_DOT_RADIUS);
	bright += calculate_bright(float2(ogse_c_artefacts5._32, ogse_c_artefacts5._42), I.tcdh.xy, ID_DETECTOR_3_DOT_RADIUS);
	bright += calculate_bright(float2(ogse_c_artefacts5._13, ogse_c_artefacts5._23), I.tcdh.xy, ID_DETECTOR_3_DOT_RADIUS);
	bright += calculate_bright(float2(ogse_c_artefacts5._33, ogse_c_artefacts5._43), I.tcdh.xy, ID_DETECTOR_3_DOT_RADIUS);
	bright += calculate_bright(float2(ogse_c_artefacts5._14, ogse_c_artefacts5._24), I.tcdh.xy, ID_DETECTOR_3_DOT_RADIUS);
	bright += calculate_bright(float2(ogse_c_artefacts5._34, ogse_c_artefacts5._44), I.tcdh.xy, ID_DETECTOR_3_DOT_RADIUS);

	float4 color = lerp(float4(0,0,0,0), ID_DETECTOR_3_COLOR, saturate(bright));

#ifdef USE_ANOMALY_DETECTION
	float an_bright = calculate_bright(float2(ogse_c_anomalies._11, ogse_c_anomalies._21), I.tcdh.xy, ID_DETECTOR_3_AN_DOT_RADIUS);
	an_bright += calculate_bright(float2(ogse_c_anomalies._31, ogse_c_anomalies._41), I.tcdh.xy, ID_DETECTOR_3_AN_DOT_RADIUS);
	an_bright += calculate_bright(float2(ogse_c_anomalies._12, ogse_c_anomalies._22), I.tcdh.xy, ID_DETECTOR_3_AN_DOT_RADIUS);
	an_bright += calculate_bright(float2(ogse_c_anomalies._32, ogse_c_anomalies._42), I.tcdh.xy, ID_DETECTOR_3_AN_DOT_RADIUS);
	an_bright += calculate_bright(float2(ogse_c_anomalies._13, ogse_c_anomalies._23), I.tcdh.xy, ID_DETECTOR_3_AN_DOT_RADIUS);
	an_bright += calculate_bright(float2(ogse_c_anomalies._33, ogse_c_anomalies._43), I.tcdh.xy, ID_DETECTOR_3_AN_DOT_RADIUS);
	an_bright += calculate_bright(float2(ogse_c_anomalies._14, ogse_c_anomalies._24), I.tcdh.xy, ID_DETECTOR_3_AN_DOT_RADIUS);
	an_bright += calculate_bright(float2(ogse_c_anomalies._34, ogse_c_anomalies._44), I.tcdh.xy, ID_DETECTOR_3_AN_DOT_RADIUS);
	
	an_bright += calculate_bright(float2(ogse_c_anomalies2._11, ogse_c_anomalies2._21), I.tcdh.xy, ID_DETECTOR_3_AN_DOT_RADIUS);
	an_bright += calculate_bright(float2(ogse_c_anomalies2._31, ogse_c_anomalies2._41), I.tcdh.xy, ID_DETECTOR_3_AN_DOT_RADIUS);
	an_bright += calculate_bright(float2(ogse_c_anomalies2._12, ogse_c_anomalies2._22), I.tcdh.xy, ID_DETECTOR_3_AN_DOT_RADIUS);
	an_bright += calculate_bright(float2(ogse_c_anomalies2._32, ogse_c_anomalies2._42), I.tcdh.xy, ID_DETECTOR_3_AN_DOT_RADIUS);
	an_bright += calculate_bright(float2(ogse_c_anomalies2._13, ogse_c_anomalies2._23), I.tcdh.xy, ID_DETECTOR_3_AN_DOT_RADIUS);
	an_bright += calculate_bright(float2(ogse_c_anomalies2._33, ogse_c_anomalies2._43), I.tcdh.xy, ID_DETECTOR_3_AN_DOT_RADIUS);
	an_bright += calculate_bright(float2(ogse_c_anomalies2._14, ogse_c_anomalies2._24), I.tcdh.xy, ID_DETECTOR_3_AN_DOT_RADIUS);
	an_bright += calculate_bright(float2(ogse_c_anomalies2._34, ogse_c_anomalies2._44), I.tcdh.xy, ID_DETECTOR_3_AN_DOT_RADIUS);
	
	an_bright += calculate_bright(float2(ogse_c_anomalies3._11, ogse_c_anomalies3._21), I.tcdh.xy, ID_DETECTOR_3_AN_DOT_RADIUS);
	an_bright += calculate_bright(float2(ogse_c_anomalies3._31, ogse_c_anomalies3._41), I.tcdh.xy, ID_DETECTOR_3_AN_DOT_RADIUS);
	an_bright += calculate_bright(float2(ogse_c_anomalies3._12, ogse_c_anomalies3._22), I.tcdh.xy, ID_DETECTOR_3_AN_DOT_RADIUS);
	an_bright += calculate_bright(float2(ogse_c_anomalies3._32, ogse_c_anomalies3._42), I.tcdh.xy, ID_DETECTOR_3_AN_DOT_RADIUS);
	an_bright += calculate_bright(float2(ogse_c_anomalies3._13, ogse_c_anomalies3._23), I.tcdh.xy, ID_DETECTOR_3_AN_DOT_RADIUS);
	an_bright += calculate_bright(float2(ogse_c_anomalies3._33, ogse_c_anomalies3._43), I.tcdh.xy, ID_DETECTOR_3_AN_DOT_RADIUS);
	an_bright += calculate_bright(float2(ogse_c_anomalies3._14, ogse_c_anomalies3._24), I.tcdh.xy, ID_DETECTOR_3_AN_DOT_RADIUS);
	an_bright += calculate_bright(float2(ogse_c_anomalies3._34, ogse_c_anomalies3._44), I.tcdh.xy, ID_DETECTOR_3_AN_DOT_RADIUS);
	
	an_bright += calculate_bright(float2(ogse_c_anomalies4._11, ogse_c_anomalies4._21), I.tcdh.xy, ID_DETECTOR_3_AN_DOT_RADIUS);
	an_bright += calculate_bright(float2(ogse_c_anomalies4._31, ogse_c_anomalies4._41), I.tcdh.xy, ID_DETECTOR_3_AN_DOT_RADIUS);
	an_bright += calculate_bright(float2(ogse_c_anomalies4._12, ogse_c_anomalies4._22), I.tcdh.xy, ID_DETECTOR_3_AN_DOT_RADIUS);
	an_bright += calculate_bright(float2(ogse_c_anomalies4._32, ogse_c_anomalies4._42), I.tcdh.xy, ID_DETECTOR_3_AN_DOT_RADIUS);
	an_bright += calculate_bright(float2(ogse_c_anomalies4._13, ogse_c_anomalies4._23), I.tcdh.xy, ID_DETECTOR_3_AN_DOT_RADIUS);
	an_bright += calculate_bright(float2(ogse_c_anomalies4._33, ogse_c_anomalies4._43), I.tcdh.xy, ID_DETECTOR_3_AN_DOT_RADIUS);
	an_bright += calculate_bright(float2(ogse_c_anomalies4._14, ogse_c_anomalies4._24), I.tcdh.xy, ID_DETECTOR_3_AN_DOT_RADIUS);
	an_bright += calculate_bright(float2(ogse_c_anomalies4._34, ogse_c_anomalies4._44), I.tcdh.xy, ID_DETECTOR_3_AN_DOT_RADIUS);
	
	an_bright += calculate_bright(float2(ogse_c_anomalies5._11, ogse_c_anomalies5._21), I.tcdh.xy, ID_DETECTOR_3_AN_DOT_RADIUS);
	an_bright += calculate_bright(float2(ogse_c_anomalies5._31, ogse_c_anomalies5._41), I.tcdh.xy, ID_DETECTOR_3_AN_DOT_RADIUS);
	an_bright += calculate_bright(float2(ogse_c_anomalies5._12, ogse_c_anomalies5._22), I.tcdh.xy, ID_DETECTOR_3_AN_DOT_RADIUS);
	an_bright += calculate_bright(float2(ogse_c_anomalies5._32, ogse_c_anomalies5._42), I.tcdh.xy, ID_DETECTOR_3_AN_DOT_RADIUS);
	an_bright += calculate_bright(float2(ogse_c_anomalies5._13, ogse_c_anomalies5._23), I.tcdh.xy, ID_DETECTOR_3_AN_DOT_RADIUS);
	an_bright += calculate_bright(float2(ogse_c_anomalies5._33, ogse_c_anomalies5._43), I.tcdh.xy, ID_DETECTOR_3_AN_DOT_RADIUS);
	an_bright += calculate_bright(float2(ogse_c_anomalies5._14, ogse_c_anomalies5._24), I.tcdh.xy, ID_DETECTOR_3_AN_DOT_RADIUS);
	an_bright += calculate_bright(float2(ogse_c_anomalies5._34, ogse_c_anomalies5._44), I.tcdh.xy, ID_DETECTOR_3_AN_DOT_RADIUS);

	color += lerp(float4(0,0,0,0), ID_DETECTOR_3_AN_COLOR, saturate(an_bright));
#endif
	color = saturate(color);
	// strange zone detector upgrade
	float4 scr_corners = ID_DETECTOR_3_SCREEN_CORNERS;
	float2 num_tc = {0.f,0.f};
	num_tc = clamp(I.tcdh.xy, scr_corners.xz, scr_corners.yw);
	num_tc.x = (num_tc.x - scr_corners.x)/(scr_corners.y - scr_corners.x)*NUMBERS_SIZE.x;
	num_tc.y = (num_tc.y - scr_corners.z)/(scr_corners.w - scr_corners.z)*NUMBERS_SIZE.y;

	num_tc.y += NUMBERS_SIZE.y*ogse_c_detector.y;

	float4 up_color = s_numbers.Sample(smp_linear, num_tc).aaaa*ID_DETECTOR_3_NUM_COLOR;
	color = lerp(color, up_color, ogse_c_detector.x);

	return saturate(color)*ID_DETECTOR_3_POWER;
}